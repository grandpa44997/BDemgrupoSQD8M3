/*Script com as consultas solicitadas nas rúbricas do trabalho*/

/*1*/
SELECT COUNT(ID_ESTUDANTE) FROM ESTUDANTE

/*2*/
SELECT A.ID_PESSOA_FACILITADORA FACILITADORA, A.NOME
FROM PESSOA_FACILITADORA A
INNER JOIN TURMA_PESSOA_FACILITADORA B ON B.ID_PESSOA_FACILITADORA = A.ID_PESSOA_FACILITADORA
GROUP BY A.ID_PESSOA_FACILITADORA, A.NOME
HAVING COUNT(DISTINCT B.ID_TURMA) >1

/*3*/
CREATE VIEW ESTUDANTE_INATIVO AS 
SELECT A.ID_TURMA,
COUNT(CASE WHEN B.STATUS = 'INATIVO' THEN 1 END) AS ESTUDANTE_INATIVO,
COUNT(B.ID_ESTUDANTE) AS TOTAL_ESTUDANTE,
(COUNT(CASE WHEN B.STATUS = 'INATIVO' THEN 1 END)::NUMERIC /COUNT(B.ID_ESTUDANTE)::NUMERIC) *100 AS PORCENTAGEM_INATIVO
FROM TURMA A
INNER JOIN ESTUDANTE B ON A.ID_TURMA = B.ID_TURMA
GROUP BY A.ID_TURMA
/*Para consultar a VIEW criada é só escrever*/
SELECT * FROM ESTUDANTE_INATIVO

/*4*/

/*EM DESENVOLVIMENTO ESPERANDO A AULA PARA NÃO FAZER ERRADO.*/

/*5*/
/* Nome do facilitador soft da turma 2, mostrando o modulo, nome dos alunos e o curso */
SELECT A.NOME AS FACILITADOR,A.FRENTE AS FRENTE,C.ID_TURMA AS TURMA, D.NOME AS MODULO, E.NOME AS ALUNO, F.NOME AS CURSO
FROM PESSOA_FACILITADORA A
LEFT JOIN TURMA_PESSOA_FACILITADORA B ON A.ID_PESSOA_FACILITADORA = B.ID_PESSOA_FACILITADORA
LEFT JOIN TURMA C ON C.ID_TURMA = B.ID_TURMA
LEFT JOIN MODULO D ON D.ID_MODULO = C.ID_MODULO
LEFT JOIN ESTUDANTE E ON E.ID_TURMA = C.ID_TURMA
LEFT JOIN CURSO F ON F.ID_CURSO = C.ID_CURSO
WHERE C.ID_TURMA = 2 AND A.FRENTE = 'SOFT';

